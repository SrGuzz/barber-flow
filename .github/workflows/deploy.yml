name: ðŸš€ Deploy incremental via SFTP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout do cÃ³digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # necessÃ¡rio para obter o commit anterior

      - name: ðŸ§ª Detectar arquivos modificados
        id: changed-files
        run: |
          echo "Detectando arquivos modificados no Ãºltimo commit..."
          git diff --name-only HEAD^ HEAD > changed_files.txt
          cat changed_files.txt

      - name: ðŸ“¦ Instalar cliente SSH
        run: sudo apt-get install -y sshpass

      - name: ðŸ“¡ Enviar arquivos modificados via SFTP
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_USER: ${{ secrets.SFTP_USERNAME }}
          SFTP_PASS: ${{ secrets.SFTP_PASSWORD }}
          REMOTE_PATH: /home/storage/2/8d/40/barberflowtecnol1
        run: |
          while read file; do
            # Ajustar o destino com base no diretÃ³rio local
            if [[ $file == public/* ]]; then
              TARGET_DIR="$REMOTE_PATH/public_html/$(dirname ${file#public/})"
              DEST="$REMOTE_PATH/public_html/${file#public/}"
            elif [[ $file == barber_flow/* ]]; then
              TARGET_DIR="$REMOTE_PATH/barber_flow/$(dirname ${file#barber_flow/})"
              DEST="$REMOTE_PATH/barber_flow/${file#barber_flow/}"
            else
              echo "Ignorando: $file"
              continue
            fi

            echo "Enviando: $file â†’ $DEST"

            # Cria o diretÃ³rio de destino remoto (ignora erro se jÃ¡ existir)
            sshpass -p "$SFTP_PASS" ssh -o StrictHostKeyChecking=no $SFTP_USER@$SFTP_HOST "mkdir -p \"$TARGET_DIR\""

            # Envia o arquivo
            sshpass -p "$SFTP_PASS" sftp -o StrictHostKeyChecking=no $SFTP_USER@$SFTP_HOST <<EOF put "$file" "$DEST" EOF done < changed_files.txt
